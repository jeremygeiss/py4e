#+TITLE:  Python for Everybody

* 1. Intro:  Hello World
- First program.  Print 'hello world.'
#+begin_src python
print("hello world")
#+end_src

* 2. Variables, expressions and statements

** Hello, with user input
- Use input to prompt a user for their name and then welcome them.
#+begin_src python
name = input('Enter your name: ')
print("Hello ", name)
#+end_src
** Hours
- Calculate your wages based on the number of hours you worked.
- Use input to read a string and float() to convert the string to a number.
#+begin_src python
hrs = input("Enter hours:")
rate = input("Enter hourly rate:")
Pay = float(hrs) * float(rate)
print("Pay:",Pay)
#+end_src
* 3. Conditional Execution
** Exercise 3.1
- Use input to read a string and float() to convert the string to a number.
- Do not worry about error checking the user input - assume the user types numbers properly.
#+begin_src python
hrs = input("Enter Hours:")
h = float(hrs)
rate = input("Enter rate:")
r = float(rate)
if h > 40:
    pay = (40*r) + ((h-40)*(r*1.5))
else :
     pay = h*r
print(pay)
#+end_src
** Exercise 3.3
- Write a program to prompt for a score between 0.0 and 1.0. If the score is out of range, print an error. If the score is between 0.0 and 1.0, print a grade using the following table:
Score Grade
>= 0.9 A
>= 0.8 B
>= 0.7 C
>= 0.6 D
< 0.6 F
If the user enters a value out of range, print a suitable error message and exit. For the test, enter a score of 0.85. 
#+begin_src python
s = input("Enter Score: ")

try:
    score =float(s)
except:
    print("Please enter a score between 0.0 and 1.0")
    quit()

if score > 1.0 or score < 0.0 :
    print("Enter a score between 0.0 and 1.0")
    quit()
elif score >= 0.9 and score <= 1.0 : 
    grade =  "A"
    print(grade)
elif score >= 0.8 and score < 0.9 :
    grade =  "B"
    print(grade)
elif score >= 0.7 and score < 0.8 :
    grade =  "C"
    print(grade)
elif score >= 0.6 and score < 0.7:
    grade =  "D"
    print(grade)
elif score < 0.6 :
    grade =  "F"
    print(grade)
#+end_src
* 4. Functions
** Exercise 4.6
- Write a program to prompt the user for hours and rate per hour using input to compute gross pay. Pay should be the normal rate for hours up to 40 and time-and-a-half for the hourly rate for all hours worked above 40 hours. Put the logic to do the computation of pay in a function called computepay() and use the function to do the computation. The function should return a value. Use 45 hours and a rate of 10.50 per hour to test the program (the pay should be 498.75). You should use input to read a string and float() to convert the string to a number. Do not worry about error checking the user input unless you want to - you can assume the user types numbers properly. Do not name your variable sum or use the sum() function. 
#+begin_src python
def computepay(h, r):
    if h > 40:
        pay = (40*r) + ((h-40)*(r*1.5))
        #print("Overtime")
    else :
        pay = h*r
        #print("regular")


    return pay


hrs = input("Enter Hours\n")
h = float(hrs)
rate = input("Enter rate\n")
r = float(rate)

pay = computepay(h, r)
print("Pay", pay)
#+end_src
* 5. Loops and Iterations
** Exercise 5.2
- Write a program that repeatedly prompts a user for integer numbers until the user enters 'done'. Once 'done' is entered, print out the largest and smallest of the numbers. If the user enters anything other than a valid number catch it with a try/except and put out an appropriate message and ignore the number. Enter 7, 2, bob, 10, and 4 and match the output below. 
#+begin_src python
largest = None
smallest = None
while True:
    num = input("Enter a number: ")
    if num == "done":
        break
    print(num)

print("Maximum", largest)
#+end_src

